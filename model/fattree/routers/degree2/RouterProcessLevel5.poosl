import "../../../common/Flit.poosl"
import "../../../libraries/distributions.poosl"

process class RandomUpStreamRouterDegree2Level5(ProcessingTime : Real, NodeY: Integer)

ports
	IT1, IT2, IT3, IT4, IT5,
	IT6, IT7, IT8, IT9, IT10,
	IT11,IT12,IT13,IT14,IT15,
	IT16,IT17,IT18,IT19,IT20,
	IT21,IT22,IT23,IT24,IT25,
	IT26,IT27,IT28,IT29,IT30,
	IT31,IT32,
	IB1, IB2, IB3, IB4, IB5,
	IB6, IB7, IB8, IB9, IB10,
	IB11,IB12,IB13,IB14,IB15,
	IB16,IB17,IB18,IB19,IB20,
	IB21,IB22,IB23,IB24,IB25,
	IB26,IB27,IB28,IB29,IB30,
	IB31,IB32,
	OT1, OT2, OT3, OT4, OT5,
	OT6, OT7, OT8, OT9, OT10,
	OT11,OT12,OT13,OT14,OT15,
	OT16,OT17,OT18,OT19,OT20,
	OT21,OT22,OT23,OT24,OT25,
	OT26,OT27,OT28,OT29,OT30,
	OT31,OT32,
	OB1, OB2, OB3, OB4, OB5,
	OB6, OB7, OB8, OB9, OB10,
	OB11,OB12,OB13,OB14,OB15,
	OB16,OB17,OB18,OB19,OB20,
	OB21,OB22,OB23,OB24,OB25,
	OB26,OB27,OB28,OB29,OB30,
	OB31,OB32
	
messages
	IT1?Flit(Flit)
	IT2?Flit(Flit)
	IT3?Flit(Flit)
	IT4?Flit(Flit)
	IT5?Flit(Flit)
	IT6?Flit(Flit)
	IT7?Flit(Flit)
	IT8?Flit(Flit)
	IT9?Flit(Flit)
	IT10?Flit(Flit)
	IT11?Flit(Flit)
	IT12?Flit(Flit)
	IT13?Flit(Flit)
	IT14?Flit(Flit)
	IT15?Flit(Flit)
	IT16?Flit(Flit)
	IT17?Flit(Flit)
	IT18?Flit(Flit)
	IT19?Flit(Flit)
	IT20?Flit(Flit)
	IT21?Flit(Flit)
	IT22?Flit(Flit)
	IT23?Flit(Flit)
	IT24?Flit(Flit)
	IT25?Flit(Flit)
	IT26?Flit(Flit)
	IT27?Flit(Flit)
	IT28?Flit(Flit)
	IT29?Flit(Flit)
	IT30?Flit(Flit)
	IT31?Flit(Flit)
	IT32?Flit(Flit)
	IB1?Flit(Flit)
	IB2?Flit(Flit)
	IB3?Flit(Flit)
	IB4?Flit(Flit)
	IB5?Flit(Flit)
	IB6?Flit(Flit)
	IB7?Flit(Flit)
	IB8?Flit(Flit)
	IB9?Flit(Flit)
	IB10?Flit(Flit)
	IB11?Flit(Flit)
	IB12?Flit(Flit)
	IB13?Flit(Flit)
	IB14?Flit(Flit)
	IB15?Flit(Flit)
	IB16?Flit(Flit)
	IB17?Flit(Flit)
	IB18?Flit(Flit)
	IB19?Flit(Flit)
	IB20?Flit(Flit)
	IB21?Flit(Flit)
	IB22?Flit(Flit)
	IB23?Flit(Flit)
	IB24?Flit(Flit)
	IB25?Flit(Flit)
	IB26?Flit(Flit)
	IB27?Flit(Flit)
	IB28?Flit(Flit)
	IB29?Flit(Flit)
	IB30?Flit(Flit)
	IB31?Flit(Flit)
	IB32?Flit(Flit)
	OT1!Flit(Flit)
	OT2!Flit(Flit)
	OT3!Flit(Flit)
	OT4!Flit(Flit)
	OT5!Flit(Flit)
	OT6!Flit(Flit)
	OT7!Flit(Flit)
	OT8!Flit(Flit)
	OT9!Flit(Flit)
	OT10!Flit(Flit)
	OT11!Flit(Flit)
	OT12!Flit(Flit)
	OT13!Flit(Flit)
	OT14!Flit(Flit)
	OT15!Flit(Flit)
	OT16!Flit(Flit)
	OT17!Flit(Flit)
	OT18!Flit(Flit)
	OT19!Flit(Flit)
	OT20!Flit(Flit)
	OT21!Flit(Flit)
	OT22!Flit(Flit)
	OT23!Flit(Flit)
	OT24!Flit(Flit)
	OT25!Flit(Flit)
	OT26!Flit(Flit)
	OT27!Flit(Flit)
	OT28!Flit(Flit)
	OT29!Flit(Flit)
	OT30!Flit(Flit)
	OT31!Flit(Flit)
	OT32!Flit(Flit)
	OB1!Flit(Flit)
	OB2!Flit(Flit)
	OB3!Flit(Flit)
	OB4!Flit(Flit)
	OB5!Flit(Flit)
	OB6!Flit(Flit)
	OB7!Flit(Flit)
	OB8!Flit(Flit)
	OB9!Flit(Flit)
	OB10!Flit(Flit)
	OB11!Flit(Flit)
	OB12!Flit(Flit)
	OB13!Flit(Flit)
	OB14!Flit(Flit)
	OB15!Flit(Flit)
	OB16!Flit(Flit)
	OB17!Flit(Flit)
	OB18!Flit(Flit)
	OB19!Flit(Flit)
	OB20!Flit(Flit)
	OB21!Flit(Flit)
	OB22!Flit(Flit)
	OB23!Flit(Flit)
	OB24!Flit(Flit)
	OB25!Flit(Flit)
	OB26!Flit(Flit)
	OB27!Flit(Flit)
	OB28!Flit(Flit)
	OB29!Flit(Flit)
	OB30!Flit(Flit)
	OB31!Flit(Flit)
	OB32!Flit(Flit)

variables
	TopRoutingDistribution: Distribution
	BottomRoutingDistribution: Distribution
init
	Initialise()()
methods
	Initialise()()
		TopRoutingDistribution := new(DiscreteUniform) withParameters(1, 32);
		BottomRoutingDistribution := new(DiscreteUniform) withParameters(1, 16);
		TransferFlit()()
		
	TransferFlit()()
	|f: Flit, iTop: Integer, iBottom: Integer, dest: Integer, childTerminalBase: Integer, childIndexInterval: Integer, busIndex1: Integer, busIndex2: Integer|//, busDegree: Integer, nodeLevel: Integer|

		sel
			IB1?Flit(f)
		or
			IB2?Flit(f)
		or
			IB3?Flit(f)
		or
			IB4?Flit(f)
		or
			IB5?Flit(f)
		or
			IB6?Flit(f)
		or
			IB7?Flit(f)
		or
			IB8?Flit(f)
		or
			IB9?Flit(f)
		or
			IB10?Flit(f)
		or
			IB11?Flit(f)
		or
			IB12?Flit(f)
		or
			IB13?Flit(f)
		or
			IB14?Flit(f)
		or
			IB15?Flit(f)
		or
			IB16?Flit(f)
		or
			IB17?Flit(f)
		or
			IB18?Flit(f)
		or
			IB19?Flit(f)
		or
			IB20?Flit(f)
		or
			IB21?Flit(f)
		or
			IB22?Flit(f)
		or
			IB23?Flit(f)
		or
			IB24?Flit(f)
		or
			IB25?Flit(f)
		or
			IB26?Flit(f)
		or
			IB27?Flit(f)
		or
			IB28?Flit(f)
		or
			IB29?Flit(f)
		or
			IB30?Flit(f)
		or
			IB31?Flit(f)
		or
			IB32?Flit(f)
		or
			IT1?Flit(f)
		or
			IT2?Flit(f)
		or
			IT3?Flit(f)
		or
			IT4?Flit(f)
		or
			IT5?Flit(f)
		or
			IT6?Flit(f)
		or
			IT7?Flit(f)
		or
			IT8?Flit(f)
		or
			IT9?Flit(f)
		or
			IT10?Flit(f)
		or
			IT11?Flit(f)
		or
			IT12?Flit(f)
		or
			IT13?Flit(f)
		or
			IT14?Flit(f)
		or
			IT15?Flit(f)
		or
			IT16?Flit(f)
		or
			IT17?Flit(f)
		or
			IT18?Flit(f)
		or
			IT19?Flit(f)
		or
			IT20?Flit(f)
		or
			IT21?Flit(f)
		or
			IT22?Flit(f)
		or
			IT23?Flit(f)
		or
			IT24?Flit(f)
		or
			IT25?Flit(f)
		or
			IT26?Flit(f)
		or
			IT27?Flit(f)
		or
			IT28?Flit(f)
		or
			IT29?Flit(f)
		or
			IT30?Flit(f)
		or
			IT31?Flit(f)
		or
			IT32?Flit(f)
		les;

		delay(ProcessingTime);

		// busDegree := 2;
		// nodeLevel := 5;

		busIndex1 := 1;
		busIndex2 := 2;

		childTerminalBase := -1+NodeY*32-47;  //(NodeY-1-(1/busDegree))*busDegree^nodeLevel;
		childIndexInterval := 16; //busDegree^(nodeLevel-1);

		dest := f getDestination();
		iTop := TopRoutingDistribution sample();
		iBottom := BottomRoutingDistribution sample();

		// Check if any downward busses has access to the destination
		if (dest < (childTerminalBase + busIndex1*childIndexInterval)) | (dest > (childTerminalBase - 1 + (busIndex2+1)*childIndexInterval)) then
			// If not then send it upwards
			if iTop==1 then
				OT1!Flit(f)
			else if iTop==2 then
				OT2!Flit(f)
			else if iTop==3 then
				OT3!Flit(f)
			else if iTop==4 then
				OT4!Flit(f)
			else if iTop==5 then
				OT5!Flit(f)
			else if iTop==6 then
				OT6!Flit(f)
			else if iTop==7 then
				OT7!Flit(f)
			else if iTop==8 then
				OT8!Flit(f)
			else if iTop==9 then
				OT9!Flit(f)
			else if iTop==10 then
				OT10!Flit(f)
			else if iTop==11 then
				OT11!Flit(f)
			else if iTop==12 then
				OT12!Flit(f)
			else if iTop==13 then
				OT13!Flit(f)
			else if iTop==14 then
				OT14!Flit(f)
			else if iTop==15 then
				OT15!Flit(f)
			else if iTop==16 then
				OT16!Flit(f)
			else if iTop==17 then
				OT17!Flit(f)
			else if iTop==18 then
				OT18!Flit(f)
			else if iTop==19 then
				OT19!Flit(f)
			else if iTop==20 then
				OT20!Flit(f)
			else if iTop==21 then
				OT21!Flit(f)
			else if iTop==22 then
				OT22!Flit(f)
			else if iTop==23 then
				OT23!Flit(f)
			else if iTop==24 then
				OT24!Flit(f)
			else if iTop==25 then
				OT25!Flit(f)
			else if iTop==26 then
				OT26!Flit(f)
			else if iTop==27 then
				OT27!Flit(f)
			else if iTop==28 then
				OT28!Flit(f)
			else if iTop==29 then
				OT29!Flit(f)
			else if iTop==30 then
				OT30!Flit(f)
			else if iTop==31 then
				OT31!Flit(f)
			else if iTop==32 then
				OT32!Flit(f)
			fi fi fi fi fi fi fi fi fi fi fi fi fi fi fi fi fi fi fi fi fi fi fi fi fi fi fi fi fi fi fi fi
		// If it does, then check which bus contains the destinations
		else if (dest >= (childTerminalBase + busIndex1*childIndexInterval)) & (dest <= (childTerminalBase - 1 + (busIndex1+1)*childIndexInterval)) then
			if iBottom==1 then
				OB1!Flit(f)
			else if iBottom==2 then
				OB2!Flit(f)
			else if iBottom==3 then
				OB3!Flit(f)
			else if iBottom==4 then
				OB4!Flit(f)
			else if iBottom==5 then
				OB5!Flit(f)
			else if iBottom==6 then
				OB6!Flit(f)
			else if iBottom==7 then
				OB7!Flit(f)
			else if iBottom==8 then
				OB8!Flit(f)
			else if iBottom==9 then
				OB9!Flit(f)
			else if iBottom==10 then
				OB10!Flit(f)
			else if iBottom==11 then
				OB11!Flit(f)
			else if iBottom==12 then
				OB12!Flit(f)
			else if iBottom==13 then
				OB13!Flit(f)
			else if iBottom==14 then
				OB14!Flit(f)
			else if iBottom==15 then
				OB15!Flit(f)
			else if iBottom==16 then
				OB16!Flit(f)
			fi fi fi fi fi fi fi fi fi fi fi fi fi fi fi fi
		else if (dest >= (childTerminalBase + busIndex2*childIndexInterval)) & (dest <= (childTerminalBase - 1 + (busIndex2+1)*childIndexInterval)) then
			if iBottom==1 then
				OB17!Flit(f)
			else if iBottom==2 then
				OB18!Flit(f)
			else if iBottom==3 then
				OB19!Flit(f)
			else if iBottom==4 then
				OB20!Flit(f)
			else if iBottom==5 then
				OB21!Flit(f)
			else if iBottom==6 then
				OB22!Flit(f)
			else if iBottom==7 then
				OB23!Flit(f)
			else if iBottom==8 then
				OB24!Flit(f)
			else if iBottom==9 then
				OB25!Flit(f)
			else if iBottom==10 then
				OB26!Flit(f)
			else if iBottom==11 then
				OB27!Flit(f)
			else if iBottom==12 then
				OB28!Flit(f)
			else if iBottom==13 then
				OB29!Flit(f)
			else if iBottom==14 then
				OB30!Flit(f)
			else if iBottom==15 then
				OB31!Flit(f)
			else if iBottom==16 then
				OB32!Flit(f)
			fi fi fi fi fi fi fi fi fi fi fi fi fi fi fi fi
		fi fi fi;

		TransferFlit()()